// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using DBModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Services.Models;
using Services.Models.Authorization;
using Services.Models.MailBox;
using Services.Models.WebManagement;
using Utility.Model.SystemManageMent;
using Utility.Models.Authorization;

#nullable disable

namespace Services
{
    public partial class MODAContext : DbContext
    {
        /// <summary>
        /// 資料庫連線字串
        /// </summary>
        public static string DB_ConnectionString { get; set; }
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer(DB_ConnectionString);
            }
        }

        public MODAContext()
        {
        }

        public MODAContext(DbContextOptions<MODAContext> options)
            : base(options)
        {
        }
        public virtual DbSet<WEBNewsTranscript> WEBNewsTranscript { get; set; }
        public virtual DbSet<AuthSysGroupSysSection> AuthSysGroupSysSection { get; set; }
        public virtual DbSet<AuthSysGroupWebLevel> AuthSysGroupWebLevel { get; set; }
        public virtual DbSet<AuthSysUserWebLevel> AuthSysUserWebLevel { get; set; }
        public virtual DbSet<LogAction> LogAction { get; set; }
        public virtual DbSet<LogWebSite> LogWebSite { get; set; }
        public virtual DbSet<RelSysUserGroup> RelSysUserGroup { get; set; }
        public virtual DbSet<RelWebFileContent> RelWebFileContent { get; set; }
        public virtual DbSet<SysBlocklist> SysBlocklist { get; set; }
        public virtual DbSet<SysCategory> SysCategory { get; set; }
        public virtual DbSet<SysDepartment> SysDepartment { get; set; }
        public virtual DbSet<SysGroup> SysGroup { get; set; }
        public virtual DbSet<SysPwdHistory> SysPwdHistory { get; set; }
        public virtual DbSet<SysSection> SysSection { get; set; }
        public virtual DbSet<SysUser> SysUser { get; set; }
        public virtual DbSet<SysUserLogin> SysUserLogin { get; set; }
        public virtual DbSet<SysWebSite> SysWebSite { get; set; }
        public virtual DbSet<WEBFile> WEBFile { get; set; }
        public virtual DbSet<WEBNews> WEBNews { get; set; }
        public virtual DbSet<WEBNewsExtend> WEBNewsExtend { get; set; }
        public virtual DbSet<WebCntLink> WebCntLink { get; set; }
        public virtual DbSet<WebFileExtend> WebFileExtend { get; set; }
        public virtual DbSet<WebNewsSchedule> WebNewsSchedule { get; set; }
        public virtual DbSet<SysWebSiteLang> SysWebSiteLang { get; set; }
        public virtual DbSet<WebHrefSource> WebHrefSource { get; set; }
        public virtual DbSet<WebLevel> WebLevel { get; set; }
        public virtual DbSet<WebLevelCustomizeTag> WebLevelCustomizeTag { get; set; }
        public virtual DbSet<WebLink> WebLink { get; set; }
        public virtual DbSet<WebSiteExtend> WebSiteExtend { get; set; }
        public virtual DbSet<WebSiteLog> WebSiteLog { get; set; }
        public virtual DbSet<StaticLink> StaticLink { get; set; }
        public virtual DbSet<vw_AllLink> vw_AllLink { get; set; }
        public virtual DbSet<vw_SysSection> vw_SysSection { get; set; }
        public virtual DbSet<vw_UserLeftDep> vw_UserLeftDep { get; set; }
        public virtual DbSet<vw_WebLevel> vw_WebLevel { get; set; }
        public virtual DbSet<vw_WebLevelTree> vw_WebLevelTree { get; set; }
        public virtual DbSet<WEBOpenDataDetail> WEBOpenDataDetail { get; set; }
        public virtual DbSet<WEBOpenDataMain> WEBOpenDataMain { get; set; }
        public virtual DbSet<WEBOpenDataSchema> WEBOpenDataSchema { get; set; }
        public virtual DbSet<SysZipCode> SysZipCode { get; set; }

        public virtual DbSet<CaseApplyValidate> CaseApplyValidate { get; set; }

        public virtual DbSet<CaseApplyClass> CaseApplyClass { get; set; }

        public virtual DbSet<CaseApply> CaseApply { get; set; }
        public virtual DbSet<CaseApplyClassTo> CaseApplyClassTo { get; set; }

        public virtual DbSet<CaseApplyWeb> CaseApplyWeb { get; set; }

        public virtual DbSet<CaseApplySpeedApiLog> CaseApplySpeedApiLog { get; set; }
        public virtual DbSet<CaseApplySurvey> CaseApplySurvey { get; set; }
        public virtual DbSet<CaseApplyPage> CaseApplyPage { get; set; }
        public virtual DbSet<CaseApplyPageExtend> CaseApplyPageExtend { get; set; }
        public virtual DbSet<WebLevelSortLog> WebLevelSortLog { get; set; }

        public virtual DbSet<WebFileDownLoads> WebFileDownLoads { get; set; }

        public virtual DbSet<WEBSchedule> WEBSchedule { get; set; }

        #region 下面為自訂義 MODEL
        public virtual DbSet<sysGroupToUserModel> SysGroupToUserModels { get; set; }
        public virtual DbSet<GroupSectionByGroupModel> GroupSectionByGroupModels { get; set; }
        public virtual DbSet<UserGroupSysSectionModel> UserGroupSysSectionModels { get; set; }
        public virtual DbSet<GroupModel> GroupModels { get; set; }
        public virtual DbSet<OperationStatisticsModel> OperationStatisticsModels { get; set; }
        public virtual DbSet<OperationStatisticsModel2> OperationStatisticsModel2s { get; set; }
        public virtual DbSet<OperationStatisticsModel3> OperationStatisticsModel3s { get; set; }
        public virtual DbSet<OperationStatisticsModel4> OperationStatisticsModel4s { get; set; }

        public virtual DbSet<PathModel> PathModels { get; set; }
        public virtual DbSet<WebFileAndGroupIDModel> WebFileAndGroupIDModels { get; set; }

        public virtual DbSet<SectionReportModel> SectionReportModels { get; set; }

        public virtual DbSet<CaseApplyModel> CaseApplyModels { get; set; }
        public virtual DbSet<MailBoxReportModel> MailBoxReportModels { get; set; }

        public virtual DbSet<CaseApplyModel2>  CaseApplyModel2s { get; set; }

        public virtual DbSet<BrowseStatisticsModel> BrowseStatisticsModels { get; set; }

        public virtual DbSet<BilingualListDBModel> BilingualListModels { get; set; }

        public virtual DbSet<BilingualIOpenDataModel>  BilingualIOpenDataModels { get; set; }

        #endregion

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Chinese_Taiwan_Stroke_CI_AS");

            #region 下面為自訂義 MODEL
            modelBuilder.Entity<sysGroupToUserModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<GroupSectionByGroupModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<UserGroupSysSectionModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<GroupModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<OperationStatisticsModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<OperationStatisticsModel2>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<OperationStatisticsModel3>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<OperationStatisticsModel4>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<PathModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<WebFileAndGroupIDModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<SectionReportModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<CaseApplyModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<MailBoxReportModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<CaseApplyModel2>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<BrowseStatisticsModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<BilingualListDBModel>(entity => { entity.HasNoKey(); });
            modelBuilder.Entity<BilingualIOpenDataModel>(entity => { entity.HasNoKey(); });
            #endregion

            modelBuilder.Entity<AuthSysGroupSysSection>(entity =>
            {
                entity.HasKey(e => e.AuthSysGroupSysSectionSN);

                entity.Property(e => e.AuthSysGroupSysSectionSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.WebSiteID)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("網站編號");
            });

            modelBuilder.Entity<AuthSysGroupWebLevel>(entity =>
            {
                entity.HasKey(e => e.AuthSysGroupWebLevelSN)
                    .HasName("PK_AuthSysGroupWebLevel");

                entity.HasIndex(e => new { e.WebSiteID, e.WebLevelSN, e.AuthType, e.SysGroupSN }, "IX_AuthSysGroupWebLevel")
                    .IsUnique();

                entity.Property(e => e.AuthSysGroupWebLevelSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.AuthType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("權限類別，代碼如下Module：模組設定、Article：文章維護、Auth：權限設定");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID).HasMaxLength(256);

                entity.Property(e => e.Lang)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WebSiteID)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .HasComment("網站編號(當AuthType=Module時此欄位為空值)");
            });

            modelBuilder.Entity<AuthSysUserWebLevel>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.WebSiteID, e.WebLevelSN, e.Lang, e.AuthType, e.UserID }, "IX_AuthSysUserWebLevelM")
                    .IsUnique();

                entity.Property(e => e.AuthSysUserWebLevelSN)
                    .ValueGeneratedOnAdd()
                    .HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.AuthType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("權限類別，代碼如下Module：模組設定、Article：文章維護、Auth：權限設定");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.Lang)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserID)
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasComment("使用者帳號");

                entity.Property(e => e.WebSiteID)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("網站編號(當AuthType=Module時此欄位為空值)");
            });

            modelBuilder.Entity<LogAction>(entity =>
            {
                entity.HasKey(e => e.LogActionSN);

                entity.Property(e => e.LogActionSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.Action)
                    .HasMaxLength(128)
                    .HasComment("action/function name");

                entity.Property(e => e.Action2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .HasComment("執行動作 Add、Del、Edit  參考Utility.SysConst.Action");

                entity.Property(e => e.ActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true)
                    .HasComment("0:Web, 1:Service, 2:Utility");

                entity.Property(e => e.Controller)
                    .HasMaxLength(128)
                    .HasComment("controller name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建檔日期");

                entity.Property(e => e.DepartmentID)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.MessageInput).HasComment("輸入資料");

                entity.Property(e => e.MessageResult).HasComment("結果訊息");

                entity.Property(e => e.ProcessIPAddress)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("登入者的IP");

                entity.Property(e => e.SourceSN).HasDefaultValueSql("((0))");

                entity.Property(e => e.SourceTable)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .HasComment("資料來源：WEBNEWS、WEBBanner、WebJournal、WebLevelM、WebLevelD、WEBFile 參考Utility.SysConst.SourceTable");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true)
                    .HasComment("狀態：1:成功、0:失敗");

                entity.Property(e => e.UserID)
                    .HasMaxLength(64)
                    .HasComment("使用者帳號");

                entity.Property(e => e.WebPath).HasComment("紀錄修訂的網頁路徑\r\n如：系統架構相關/網站管理/網站架構列表/首頁/研究報告查詢/99年委辦計畫一覽表");

                entity.Property(e => e.WebSiteID).HasMaxLength(64);
            });

            modelBuilder.Entity<LogWebSite>(entity =>
            {
                entity.HasKey(e => e.LogWebSiteSN);

                entity.Property(e => e.LogWebSiteSN).HasComment("流水碼");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasComment("CreateDate");

                entity.Property(e => e.GroupId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("GroupId");

                entity.Property(e => e.Ip)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.WebFileSN).HasComment("WebFileSN");

                entity.Property(e => e.WebLevelSN).HasComment("WebLevelMSN");

                entity.Property(e => e.WebNewsSN).HasComment("WebNewsSN");
            });

            modelBuilder.Entity<RelSysUserGroup>(entity =>
            {
                entity.HasKey(e => e.RelSysGroupUserSN)
                    .HasName("PK_SysUserGroup");

                entity.Property(e => e.RelSysGroupUserSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasComment("建檔日期");

                entity.Property(e => e.CreatedIPAddress)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedUserID)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.SysGroupSN).HasComment("群組流水號");

                entity.Property(e => e.UserID)
                    .HasMaxLength(64)
                    .HasComment("使用者帳號");
            });

            modelBuilder.Entity<RelWebFileContent>(entity =>
            {
                entity.HasKey(e => e.RelWebFileContentSN)
                    .HasName("PK_RelWEBFileContent");

                entity.HasIndex(e => new { e.SourceTable, e.WEBFileSN, e.SourceSN, e.GroupID }, "IX_WEBFileContent")
                    .IsUnique();

                entity.Property(e => e.RelWebFileContentSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.GroupID)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((1))")
                    .HasComment("分辨群組檔案");

                entity.Property(e => e.PageView).HasDefaultValueSql("((0))");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.SourceTable)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("資料來源：WEBNEWS、WEBBanner、WebJournal");
            });

            modelBuilder.Entity<StaticLink>(entity =>
            {
                entity.HasKey(e => e.StaticLinkSN);

                entity.Property(e => e.StaticLinkSN).HasComment("流水碼");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasComment("建立時間");

                entity.Property(e => e.CreatedUserID)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("建立人員");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasComment("結束時間");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否發布：0 不公開，1 發布、2草稿");

                entity.Property(e => e.Lang)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("語言：TW、EN");

                entity.Property(e => e.Link)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasComment("讀取資料連結");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員");

                entity.Property(e => e.SourseSN).HasComment("來源資料SN");

                entity.Property(e => e.MainSN).HasComment("多語系共通SN");

                entity.Property(e => e.SourseTable)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("來源資料Table");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasComment("開始時間");

                entity.Property(e => e.StaticUrl)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasComment("客製靜態網址");

                entity.Property(e => e.WebSiteID)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("網站編號");

                entity.Property(e => e.IsLive)
                     .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("0: 未生成/首頁/刪除   1 : 已生成");

                entity.Property(e => e.staticDate)
                   .HasColumnType("datetime")
                   .HasComment("靜態化時間");

            });

            modelBuilder.Entity<SysBlocklist>(entity =>
            {
                entity.HasKey(e => e.SysBlocklistSN);

                entity.Property(e => e.SysBlocklistSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.BlockType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true)
                    .HasComment("0 不設、1 黑名單、2 白名單");

                entity.Property(e => e.BlockedIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("被阻擋的IP");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID).HasMaxLength(256);

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength(true)
                    .HasComment("是否啟用：1 啟用、0 停用、-99 刪除");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(256)
                    .HasComment("處理人員");

                entity.Property(e => e.WebType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true)
                    .HasComment("M 後台、W 前台");
            });

            modelBuilder.Entity<SysCategory>(entity =>
            {
                entity.HasKey(e => new { e.SysCategoryKey, e.ParentKey, e.WebSiteID, e.Lang });

                entity.Property(e => e.SysCategorySN).ValueGeneratedOnAdd();

                entity.Property(e => e.SysCategoryKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("參數代碼");

                entity.Property(e => e.ParentKey)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WebSiteID).HasMaxLength(50);

                entity.Property(e => e.Lang)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID).HasMaxLength(256);

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasComment("描述");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .HasComment("狀態");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(256)
                    .HasComment("處理人員");

                entity.Property(e => e.SortOrder)
                    .HasDefaultValueSql("((0))")
                    .HasComment("排序");

                entity.Property(e => e.Value)
                    .HasMaxLength(400)
                    .HasComment("參數值");

                entity.Property(e => e.MainSN)
                      .HasComment("主key");

            });

            modelBuilder.Entity<SysDepartment>(entity =>
            {
                entity.HasKey(e => e.SysDepartmentSN);

                entity.Property(e => e.SysDepartmentSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("最後異動日期");

                entity.Property(e => e.CreatedUserID)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.DepartmentID)
                    .HasMaxLength(64)
                    .HasComment("單位編號");

                entity.Property(e => e.DepartmentName)
                    .HasMaxLength(64)
                    .HasComment("部門名稱");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasComment("部門描述");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否啟用：1 啟用、0 停用");

                entity.Property(e => e.ParentID).HasComment("父單位流水號");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("最後異動日期");

                entity.Property(e => e.ProcessIPAddress)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessUserID)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.ShortName)
                    .HasMaxLength(256)
                    .HasComment("部門簡稱");

                entity.Property(e => e.Lang)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("語系");

                entity.Property(e => e.MainSN)
                    .HasComment("主key");

                entity.Property(e => e.WebSiteId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("WebSiteID")
                    .HasComment("網站編號");
            });

            modelBuilder.Entity<SysGroup>(entity =>
            {
                entity.HasKey(e => e.SysGroupSN);

                entity.Property(e => e.SysGroupSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CanDelete)
                    .HasMaxLength(1)
                    .HasComment("是否可刪除：1 可、0 否，預設一般群組和系統管理群組不可刪除");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID).HasMaxLength(256);

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasComment("群組描述");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(200)
                    .HasComment("群組名稱");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否啟用：1 啟用、0 停用");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(256)
                    .HasComment("處理人員");

                entity.Property(e => e.SortOrder).HasComment("排序");
            });

            modelBuilder.Entity<SysPwdHistory>(entity =>
            {
                entity.HasKey(e => e.SysPwdHistorySN)
                    .HasName("PK_PwdHistory");

                entity.Property(e => e.SysPwdHistorySN).HasComment("流水碼");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreateUserID).HasMaxLength(256);

                entity.Property(e => e.p_w_d)
                    .HasMaxLength(128)
                    .HasComment("加密後儲存");

                entity.Property(e => e.UserID)
                    .HasMaxLength(64)
                    .HasComment("使用者帳號");
            });

            modelBuilder.Entity<SysSection>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ActionPath)
                    .HasMaxLength(1024)
                    .HasComment("controller\\function");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID).HasMaxLength(256);

                entity.Property(e => e.Description)
                    .HasMaxLength(256)
                    .HasComment("功能說明");

                entity.Property(e => e.Icon).HasMaxLength(512);

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(1)
                    .HasComment("是否啟用：1 啟用、0 停用");

                entity.Property(e => e.Parameter).HasComment("參數");

                entity.Property(e => e.ParentSN).HasComment("上層功能流水號[SysSection]");

                entity.Property(e => e.Path)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(256)
                    .HasComment("處理人員");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.SysSectionSN)
                    .ValueGeneratedOnAdd()
                    .HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.Title)
                    .HasMaxLength(128)
                    .HasComment("功能名稱");
            });

            modelBuilder.Entity<SysUser>(entity =>
            {
                entity.HasKey(e => e.UserID)
                    .HasName("PK_SYSUser");

                entity.HasComment("使用者");
                entity.Property(e => e.ADUserID)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("AD帳號");

                entity.Property(e => e.UserID)
                    .HasMaxLength(256)
                    .HasComment("帳號");

                entity.Property(e => e.DateCreated)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.DepartmentID)
                    .HasMaxLength(64)
                    .HasComment("部門編號");

                entity.Property(e => e.DisableDate)
                    .HasColumnType("datetime")
                    .HasComment("停用日期");

                entity.Property(e => e.Email)
                    .HasMaxLength(128)
                    .HasComment("聯絡信箱");

                entity.Property(e => e.EmpID)
                    .HasMaxLength(64)
                    .HasComment("員工編號");

                entity.Property(e => e.EngName)
                    .HasMaxLength(128)
                    .HasComment("英文名稱");

                entity.Property(e => e.ErrLoginnum)
                    .HasDefaultValueSql("((0))")
                    .HasComment("登入失敗次數");

                entity.Property(e => e.Gender)
                    .HasMaxLength(1)
                    .HasComment("性別：F，M");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(64)
                    .HasComment("職稱");

                entity.Property(e => e.LastLoginDate)
                    .HasColumnType("datetime")
                    .HasComment("最後登入日期");

                entity.Property(e => e.Mobile)
                    .HasMaxLength(16)
                    .HasComment("連絡電話");

                entity.Property(e => e.NickName)
                    .HasMaxLength(50)
                    .HasComment("暱稱");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(64)
                    .HasComment("辦公室電話");

                entity.Property(e => e.p_w_d)
                    .HasMaxLength(128)
                    .HasComment("密碼 加密後儲存");

                entity.Property(e => e.Photo)
                    .HasMaxLength(128)
                    .HasComment("照片");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(256)
                    .HasComment("處理人員");

                entity.Property(e => e.PwdLastUpdate)
                    .HasColumnType("datetime")
                    .HasComment("最後修改密碼日期");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.SysUserSN).Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
                entity.Property(e => e.SysUserSN).ValueGeneratedOnAdd();

                entity.Property(e => e.Tel)
                    .HasMaxLength(16)
                    .HasComment("連絡電話");

                entity.Property(e => e.UserName)
                    .HasMaxLength(128)
                    .HasComment("使用者名稱");

                entity.Property(e => e.UserSatus)
                    .HasMaxLength(3)
                    .HasComment("使用者狀態：0 停用，1 啟用 -99 刪除");
            });

            modelBuilder.Entity<SysUserLogin>(entity =>
            {
                entity.HasKey(e => e.SysUserLoginSN);

                entity.Property(e => e.SysUserLoginSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建檔日期");

                entity.Property(e => e.Message)
                    .IsRequired()
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasComment("登入訊息");

                entity.Property(e => e.ProcessIPAddress)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("登入者的IP");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasComment("狀態：1:成功、0:失敗");

                entity.Property(e => e.UserID)
                    .HasMaxLength(64)
                    .HasComment("使用者帳號");

                entity.Property(e => e.WebSiteID)
                    .HasMaxLength(64)
                    .HasComment("使用者登入的網站");
            });

            modelBuilder.Entity<SysWebSite>(entity =>
            {
                entity.HasKey(e => e.SysWebSiteSN);

                entity.HasIndex(e => e.WebSiteID, "IX_SysWebSite")
                    .IsUnique();

                entity.Property(e => e.SysWebSiteSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CheckLinksDate)
                    .HasColumnType("datetime")
                    .HasComment("掃描失效連結時間");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID).HasMaxLength(256);

                entity.Property(e => e.DNS)
                    .HasMaxLength(100)
                    .HasComment("網域");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasComment("描述");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否啟用：1 啟用、0 停用");

                entity.Property(e => e.Lang)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("語言：TW、EN");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(256)
                    .HasComment("處理人員");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.Title)
                    .HasMaxLength(200)
                    .HasComment("標題");

                entity.Property(e => e.WebSiteID)
                    .HasMaxLength(50)
                    .HasComment("網站編號");
            });

            modelBuilder.Entity<SysWebSiteLang>(entity =>
            {
                entity.HasKey(e => e.SysWebSiteLangSN);

                entity.HasIndex(e => new { e.WebSiteID, e.Lang }, "IX_SysWebSiteLang")
                    .IsUnique();

                entity.Property(e => e.SysWebSiteLangSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID)
                    .HasMaxLength(256)
                    .HasComment("建立人員IP");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .HasComment("描述");

                entity.Property(e => e.GoogleSearchKey)
                   .HasMaxLength(50)
                   .IsFixedLength()
                   .HasComment("查詢");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否啟用：1 啟用、0 停用");

                entity.Property(e => e.Lang)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("語言：TW、EN");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("處理人員");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.Title)
                    .HasMaxLength(50)
                    .HasComment("顯示標題");

                entity.Property(e => e.WebSiteID)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("網站編號");
            });

            modelBuilder.Entity<WEBFile>(entity =>
            {
                entity.HasKey(e => e.WEBFileSN);

                entity.HasIndex(e => e.WEBFileID, "IX_WEBFile")
                    .IsUnique();

                entity.Property(e => e.WEBFileSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID).HasMaxLength(256);

                entity.Property(e => e.FileName).HasMaxLength(512);

                entity.Property(e => e.FilePath).HasMaxLength(512);

                entity.Property(e => e.FileTitle).HasMaxLength(1024);

                entity.Property(e => e.FileApiPath).HasMaxLength(1024);

                entity.Property(e => e.FileType).HasMaxLength(128);

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true)
                    .HasComment("是否發布：0 不公開，1 發布");

                entity.Property(e => e.OriginalFileName).HasMaxLength(512);

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(256)
                    .HasComment("處理人員");

                entity.Property(e => e.WEBFileID)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasComment("檔案編號");
            });

            modelBuilder.Entity<WEBNews>(entity =>
            {
                entity.HasKey(e => e.WEBNewsSN);

                entity.Property(e => e.WEBNewsSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.ArticleType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasComment("文章模式，0：圖文、1：附件、2：連結、3:YoutubeID、4:iframe");

                entity.Property(e => e.ContentText).HasComment("內容");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CustomizeTagSn)
                    .HasColumnName("CustomizeTagSN")
                    .HasComment("自定標籤");

                entity.Property(e => e.DepartmentID)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasComment("描述");

                entity.Property(e => e.EProject).HasComment("政策計畫");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasComment("下架時間");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否啟用：1 啟用、0 停用     -99刪除");

                entity.Property(e => e.IsTop)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("是否置頂：1 是、0 否");

                entity.Property(e => e.KeyWord).HasComment("關鍵字");

                entity.Property(e => e.Lang)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("語言：TW、EN");

                entity.Property(e => e.MainSN).HasComment("主Key");

                entity.Property(e => e.Module)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("單元模組，代碼如下CP:單頁、NEWS：條列式(一般模組)、LINK： 相關連結、Footer：頁尾內容");

                entity.Property(e => e.OtherLangerUrl).HasComment("其他語系連結");

                entity.Property(e => e.PageView).HasComment("瀏覽/點閱數");

                entity.Property(e => e.PageViewType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("版面呈現");

                entity.Property(e => e.Performance).HasComment("整體績效");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("處理人員");

                entity.Property(e => e.PublishDate)
                    .HasColumnType("datetime")
                    .HasComment("公布日期");

                entity.Property(e => e.ServiceObject).HasComment("服務對象(會再拉出一張表紀錄-WEBNewsExtend會調整)");

                entity.Property(e => e.SortOrder)
                    .HasDefaultValueSql("((0))")
                    .HasComment("排序");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasComment("上架時間");

                entity.Property(e => e.StatesUrl).HasComment("靜態化網址");

                entity.Property(e => e.SubTitle)
                    .HasMaxLength(1024)
                    .HasComment("子標題");

                entity.Property(e => e.Tag).HasComment("主題標籤(會再拉出一張表紀錄-WEBNewsExtend會調整)");

                entity.Property(e => e.Title)
                    .HasMaxLength(1024)
                    .HasComment("主標題");

                entity.Property(e => e.URL)
                    .HasMaxLength(500)
                    .HasComment("相關連結");

                entity.Property(e => e.WebLevelSN).HasComment("單元序號[WebLevel]");

                entity.Property(e => e.WebSiteID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("網站編號");

                entity.Property(e => e.YoutubeID)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.target)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("另開視窗_blank、_Self");

                entity.Property(e => e.ZipCodeSn)
                    .HasColumnName("ZipCodeSN")
                    .HasComment("首長行程縣市");

                entity.Property(e => e.SEODescription).HasComment("SEODescription");

                entity.Property(e => e.SEOKeywords).HasComment("SEOKeywords");
            });

            modelBuilder.Entity<WEBNewsExtend>(entity =>
            {
                entity.HasKey(e => e.WEBNewsExtendSN);

                entity.Property(e => e.WEBNewsExtendSN).HasComment("本身流水碼");

                entity.Property(e => e.Column_1).IsUnicode(false)
                    .HasComment("擴充1");

                entity.Property(e => e.Column_2).HasComment("擴充2");

                entity.Property(e => e.Column_3).HasComment("擴充3");

                entity.Property(e => e.GroupID)
                    .HasMaxLength(50)
                    .IsFixedLength()
                    .HasComment("GroupID");

                entity.Property(e => e.SysCategoryKey)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasComment("SysCategoryKey");

                entity.Property(e => e.WEBNewsSN).HasComment("WEBNewsSN");
            });

            modelBuilder.Entity<WebCntLink>(entity =>
            {
                entity.HasKey(e => new { e.SourceTable, e.SourceSN, e.URL })
                    .HasName("PK_WebCntLink_1");

                entity.Property(e => e.SourceTable)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("資料來源：WEBNEWS、WEBLEVEL");

                entity.Property(e => e.URL)
                    .HasMaxLength(400)
                    .HasComment("解析CKEditor裡的連結");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<WebFileExtend>(entity =>
            {
                entity.HasKey(e => e.WebFileExtendSN);

                entity.Property(e => e.WebFileExtendSN)
                    .ValueGeneratedNever()
                    .HasComment("參考WebFile.WebFileSN");

                entity.Property(e => e.FileContentText).HasComment("檔案內容");

                entity.Property(e => e.IsProtect).HasComment("使用者保護   0-沒有(false)   1-有(true)");
            });

            modelBuilder.Entity<WebNewsSchedule>(entity =>
            {
                entity.HasKey(e => e.WebNewsScheduleSn);

                entity.Property(e => e.WebNewsScheduleSn)
                    .HasColumnName("WebNewsScheduleSN")
                    .HasComment("行程關聯表-流水碼");

                entity.Property(e => e.FromWebNewsSn)
                    .HasColumnName("FromWebNewsSN")
                    .HasComment("關聯-哪些新聞");

                entity.Property(e => e.ToWebNewsSn)
                    .HasColumnName("ToWebNewsSN")
                    .HasComment("來源 : webNews (Module 是 Schedule)");
            });

            modelBuilder.Entity<WebHrefSource>(entity =>
            {
                entity.HasKey(e => e.Sn);

                entity.Property(e => e.Sn)
                .HasColumnName("SN")
                .HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasComment("結束時間");

                entity.Property(e => e.Href)
                    .HasMaxLength(100)
                    .HasComment("連結");

                entity.Property(e => e.Info)
                   .HasMaxLength(50)
                   .IsUnicode(false)
                   .HasComment("備註");

                entity.Property(e => e.WebSiteID)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("網站編號");

                entity.Property(e => e.IsEnable).HasComment("狀態");

                entity.Property(e => e.ParentSn)
                    .HasColumnName("ParentSN")
                    .HasComment("父層SN");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("異動時間");

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasComment("來源table");

                entity.Property(e => e.SourceSn)
                    .HasColumnName("SourceSN")
                    .HasComment("來源SN");

                entity.Property(e => e.SourceSnparent)
                    .HasColumnName("SourceSNParent")
                    .HasComment("來源父層SN");

                entity.Property(e => e.StardDate)
                    .HasColumnType("datetime")
                    .HasComment("起始時間");
            });

            modelBuilder.Entity<WebLevel>(entity =>
            {
                entity.HasKey(e => e.WebLevelSN);

                entity.Property(e => e.WebLevelSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.ContentFooter).HasComment("內容區塊頁尾");

                entity.Property(e => e.ContentHeader).HasComment("內容區塊標頭");

                entity.Property(e => e.ContentText)
                   .HasMaxLength(1024)
                   .HasComment("簡介");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("建立人員");

                entity.Property(e => e.Description)
                   .HasMaxLength(1024)
                   .HasComment("描述");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasComment("下架時間");

                entity.Property(e => e.FatFooterShow)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("顯示於FatFooter：1 顯示、0 不顯示");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否啟用：1 啟用、0 停用  -99 刪除");

                entity.Property(e => e.Lang)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("語系");

                entity.Property(e => e.LeftMenuShow)
                   .HasMaxLength(1)
                   .IsUnicode(false)
                   .IsFixedLength()
                   .HasComment("顯示左側選單:1 顯示、0 不顯示");

                entity.Property(e => e.ListType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("前台列表樣式");

                entity.Property(e => e.MainMenuShow)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("顯示於主選單：1 顯示、0 不顯示");

                entity.Property(e => e.MainSN).HasComment("<同筆資料不同語系有想同的MainSN>可以想像GroupSN");

                entity.Property(e => e.Module)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("單元模組，代碼如下CP:單頁、NEWS：條列式(一般模組)、LINK： 相關連結、Journal：期刊");

                entity.Property(e => e.PageView).HasComment("瀏覽/點閱數");

                entity.Property(e => e.Parameter).HasComment("參數");

                entity.Property(e => e.ParentSN).HasComment("父層序號");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("處理人員");

                entity.Property(e => e.RSSShow)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("是否提供RSS");

                entity.Property(e => e.SortMethod)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("排序方式:0 資料排序、1最新消息排序");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasComment("上架時間");

                entity.Property(e => e.StatesUrl).HasComment("靜態化網址");

                entity.Property(e => e.SubMemuShow)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("顯示於子選單：1 顯示、0 不顯示(即環保署左選單)");

                entity.Property(e => e.TemplateValue)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("版型樣式");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasComment("標題");

                entity.Property(e => e.WebLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("自訂節點名稱<同一網站不能一致>");

                entity.Property(e => e.WebSiteID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("網站編號");

                entity.Property(e => e.WeblevelType)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasComment("1:網站單元、2.首頁區塊、3.標題頁尾區塊");

                entity.Property(e => e.Condition)
                   .HasMaxLength(150)
                   .HasComment("查詢條件");

                entity.Property(e => e.SEODescription).HasComment("SEODescription");

                entity.Property(e => e.SEOKeywords).HasComment("SEOKeywords");

                entity.Property(e => e.DepartmentID).HasComment("發布單位");

                entity.Property(e => e.AdditionalCSS).HasComment("額外擴充CSS");

                entity.Property(e => e.AdditionalScript).HasComment("額外擴充Script");

            });

            modelBuilder.Entity<WebLevelCustomizeTag>(entity =>
            {
                entity.HasKey(e => e.WebLevelCustomizeTagSn);

                entity.Property(e => e.WebLevelCustomizeTagSn)
                    .HasColumnName("WebLevelCustomizeTagSN")
                    .HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CreatedUserID")
                    .HasComment("建立人員");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("是否啟用：1 啟用、0 停用     -99刪除");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIpaddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProcessIPAddress")
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ProcessUserID")
                    .HasComment("處理人員");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.TagName)
                    .HasMaxLength(50)
                    .HasComment("自訂標籤名稱");

                entity.Property(e => e.WebLevelSn)
                    .HasColumnName("WebLevelSN")
                    .HasComment("單元序號[WebLevel]");
            });

            modelBuilder.Entity<WebLink>(entity =>
            {
                entity.HasKey(e => e.WebLinkSN);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立日期");

                entity.Property(e => e.CreatedUserID).HasMaxLength(256);

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasComment("上架日期時間");

                entity.Property(e => e.GroupID)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((1))")
                    .HasComment("分辨相關連結群組(目前係通僅1組，為防止以後會有多個相關連結區)");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否發布：0 不公開，1 發布、2草稿");

                entity.Property(e => e.Lang)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("語言：TW、EN");

                entity.Property(e => e.PageView)
                    .HasDefaultValueSql("((0))")
                    .HasComment("瀏覽/點閱數");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(256)
                    .HasComment("處理人員");

                entity.Property(e => e.SortOrder)
                    .HasDefaultValueSql("((0))")
                    .HasComment("排序");

                entity.Property(e => e.SourceSN).HasComment("WEBNEWS流水號");

                entity.Property(e => e.SourceTable)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("資料來源：WEBNEWS，參考Utility.SysConst.SourceTable");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasComment("上架日期時間");

                entity.Property(e => e.Title)
                    .HasMaxLength(200)
                    .HasComment("期刊標題e.g.第三十七卷第二期");

                entity.Property(e => e.URL).HasMaxLength(1000);

                entity.Property(e => e.WebSiteID)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("網站編號");
            });

            modelBuilder.Entity<WebSiteExtend>(entity =>
            {
                entity.HasKey(e => e.WebSiteExtendSN);

                entity.Property(e => e.WebSiteExtendSN).HasComment("流水碼");

                entity.Property(e => e.Class)
                    .HasMaxLength(20)
                    .IsFixedLength(true);

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否啟用：1 啟用、0 停用     -99刪除");

                entity.Property(e => e.Sort).HasComment("排序");

                entity.Property(e => e.Title)
                    .HasMaxLength(20)
                    .IsFixedLength(true)
                    .HasComment("標題");

                entity.Property(e => e.Url)
                    .HasMaxLength(100)
                    .HasComment("連結網址");

                entity.Property(e => e.WebSiteID)
                    .HasMaxLength(10)
                    .IsFixedLength(true)
                    .HasComment("網站編號");
            });

            modelBuilder.Entity<WebSiteLog>(entity =>
            {
                entity.HasKey(e => e.WebSiteLogSN);

                entity.Property(e => e.WebSiteLogSN).HasComment("流水碼");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasComment("CreateDate");

                entity.Property(e => e.GroupId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("GroupId");

                entity.Property(e => e.Ip)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.WebFileSN).HasComment("WebFileSN");

                entity.Property(e => e.WebLevelSN).HasComment("WebLevelSN");

                entity.Property(e => e.WebNewsSN).HasComment("WebNewsSN");
            });

            modelBuilder.Entity<vw_AllLink>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vw_AllLink");

                entity.Property(e => e.Path).HasMaxLength(200);

                entity.Property(e => e.Title).HasMaxLength(1033);

                entity.Property(e => e.URL).HasMaxLength(1000);
            });

            modelBuilder.Entity<vw_SysSection>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vw_SysSection");

                entity.Property(e => e.ActionPath).HasMaxLength(1024);

                entity.Property(e => e.ActionPathP).HasMaxLength(1024);

                entity.Property(e => e.Icon).HasMaxLength(512);

                entity.Property(e => e.IconP).HasMaxLength(512);

                entity.Property(e => e.IsEnableC).HasMaxLength(1);

                entity.Property(e => e.IsEnableP).HasMaxLength(1);

                entity.Property(e => e.Title).HasMaxLength(128);

                entity.Property(e => e.TitleP).HasMaxLength(128);
            });

            modelBuilder.Entity<vw_UserLeftDep>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vw_UserLeftDep");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedUserID).HasMaxLength(256);

                entity.Property(e => e.DateCreated).HasColumnType("datetime");

                entity.Property(e => e.DepartmentID).HasMaxLength(64);

                entity.Property(e => e.DepartmentName).HasMaxLength(64);

                entity.Property(e => e.Description).HasMaxLength(500);

                entity.Property(e => e.DisableDate).HasColumnType("datetime");

                entity.Property(e => e.Email).HasMaxLength(128);

                entity.Property(e => e.EmpID).HasMaxLength(64);

                entity.Property(e => e.EngName).HasMaxLength(128);

                entity.Property(e => e.Expr1).HasMaxLength(64);

                entity.Property(e => e.Expr2).HasMaxLength(256);

                entity.Property(e => e.Expr3).HasColumnType("datetime");

                entity.Property(e => e.Expr4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender).HasMaxLength(1);

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.JobTitle).HasMaxLength(64);

                entity.Property(e => e.LastLoginDate).HasColumnType("datetime");

                entity.Property(e => e.Mobile).HasMaxLength(16);

                entity.Property(e => e.NickName).HasMaxLength(50);

                entity.Property(e => e.OfficePhone).HasMaxLength(64);

                entity.Property(e => e.Password).HasMaxLength(128);

                entity.Property(e => e.Photo).HasMaxLength(128);

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessUserID).HasMaxLength(256);

                entity.Property(e => e.PwdLastUpdate).HasColumnType("datetime");

                entity.Property(e => e.ShortName).HasMaxLength(256);

                entity.Property(e => e.Tel).HasMaxLength(16);

                entity.Property(e => e.UserID)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.UserName).HasMaxLength(128);

                entity.Property(e => e.UserSatus).HasMaxLength(3);
            });

            modelBuilder.Entity<vw_WebLevel>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vw_WebLevel");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedUserID)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.FatFooterShow)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Lang)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MainMenuShow)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Module)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessIPAddress)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessUserID)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.RSSShow)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.SubMemuShow)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.WebSiteID)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WeblevelType)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<vw_WebLevelTree>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vw_WebLevelTree");

                entity.Property(e => e.Path).HasMaxLength(200);

                entity.Property(e => e.Title).HasMaxLength(200);
            });


            modelBuilder.Entity<StaticLink>(entity =>
            {
                entity.HasKey(e => e.StaticLinkSN);

                entity.Property(e => e.StaticLinkSN).HasComment("流水碼");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasComment("建立時間");

                entity.Property(e => e.CreatedUserID)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("建立人員");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasComment("結束時間");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否發布：0 不公開，1 發布、2草稿");

                entity.Property(e => e.Link)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("讀取資料連結");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("處理時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員IP");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("處理人員");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasComment("開始時間");

                entity.Property(e => e.WebSiteID)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("網站編號");
            });

            modelBuilder.Entity<WEBOpenDataDetail>(entity =>
            {
                entity.HasKey(e => e.OpenDataDetailSN)
                    .HasName("PK_OpenDataDetail");

                entity.Property(e => e.OpenDataDetailSN).HasComment("流水號");

                entity.Property(e => e.Code)
                   .HasMaxLength(10)
                   .HasComment("代號");

                entity.Property(e => e.DateCreated)
                    .HasColumnType("datetime")
                    .HasComment("創建時間");

                entity.Property(e => e.Join).HasComment("關聯：0.innerjoin、1.leftjoin、2.rightjoin");

                entity.Property(e => e.OpenDataMainSN).HasComment("外來鍵");

                entity.Property(e => e.SQLParameter).HasComment("SQL條件");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("維護時間");

                entity.Property(e => e.TableName)
                    .HasMaxLength(100)
                    .HasComment("資料庫名稱");
            });

            modelBuilder.Entity<WEBOpenDataMain>(entity =>
            {
                entity.HasKey(e => e.WEBOpenDataMainSN);

                entity.Property(e => e.WEBOpenDataMainSN).HasComment("流水號");

                entity.Property(e => e.AuthType)
                    .HasMaxLength(50)
                    .HasComment("認證類型");

                entity.Property(e => e.ContacPerson)
                    .HasMaxLength(20)
                    .HasComment("聯絡人");

                entity.Property(e => e.ContactInfo)
                    .HasMaxLength(25)
                    .HasComment("聯絡方式");

                entity.Property(e => e.ContentText)
                    .HasMaxLength(150)
                    .HasComment("內容");

                entity.Property(e => e.Count).HasComment("筆數");

                entity.Property(e => e.DateCreated)
                    .HasColumnType("datetime")
                    .HasComment("建立時間");

                entity.Property(e => e.Description)
                    .HasMaxLength(150)
                    .HasComment("備註");

                entity.Property(e => e.EncodingType)
                    .HasMaxLength(10)
                    .HasComment("編碼格式");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasComment("結束時間");

                entity.Property(e => e.IsCSV).HasComment("是否需要CSV");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("狀態");

                entity.Property(e => e.IsJSON).HasComment("是否需要JSON");

                entity.Property(e => e.IsRemoveTag).HasComment("是否移除標籤");

                entity.Property(e => e.IsXML).HasComment("是否需要XML");

                entity.Property(e => e.ModuleType).HasComment("類別");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("維護時間");

                entity.Property(e => e.ProcessUserID)
                    .HasMaxLength(30)
                    .HasComment("維護人");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasComment("開始時間");

                entity.Property(e => e.SubTitle)
                    .HasMaxLength(50)
                    .HasComment("副標題");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("標題");

                entity.Property(e => e.Lang)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("語系");

                entity.Property(e => e.URL)
                    .HasMaxLength(4000)
                    .HasComment("授權說明網址");

                entity.Property(e => e.Refresh)
                   .HasMaxLength(100)
                   .HasComment("更新說明");

                entity.Property(e => e.ChargeType)
                   .HasMaxLength(50)
                   .HasComment("計費方式");

                entity.Property(e => e.SQLParameter).HasComment("SQL條件");

                entity.Property(e => e.TableName)
                   .HasMaxLength(100)
                   .HasComment("資料庫名稱");

                entity.Property(e => e.SysGroupID)
                   .HasMaxLength(10)
                   .IsFixedLength()
                   .HasComment("群組編號");

                entity.Property(e => e.WebSiteID)
                   .HasMaxLength(30)
                   .IsUnicode(false)
                   .HasComment("網站編號");

                entity.Property(e => e.DepartmentID)
                .HasMaxLength(64)
                .HasComment("部門ID");

            });

            modelBuilder.Entity<WEBOpenDataSchema>(entity =>
            {
                entity.HasKey(e => e.OpenDataSchemaSN);

                entity.Property(e => e.OpenDataSchemaSN).HasComment("流水號");

                entity.Property(e => e.Column)
                    .HasMaxLength(50)
                    .HasComment("欄位");

                entity.Property(e => e.DataType)
                    .HasMaxLength(50)
                    .HasComment("資料型別");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .HasComment("欄位名稱");

                entity.Property(e => e.OpenDataMainSN).HasComment("外來鍵");

                entity.Property(e => e.OpenDataDetailSN).HasComment("外來鍵");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.TableName)
                    .HasMaxLength(100)
                    .HasComment("資料庫名稱");

                entity.Property(e => e.isRequired)
                    .HasMaxLength(2)
                    .HasComment("是否必輸");
            });

            modelBuilder.Entity<WEBNewsTranscript>(entity =>
            {
                entity.HasKey(e => e.WEBNewsTranscriptSN);

                entity.Property(e => e.WEBNewsTranscriptSN).HasComment("逐字稿流水碼");

                entity.Property(e => e.Item).HasComment("標號");

                entity.Property(e => e.TranscriptContent)
                    .IsRequired()
                    .HasComment("內文");

                entity.Property(e => e.TranscriptForm)
                    .IsRequired()
                    .HasComment("發言人");

                entity.Property(e => e.WEBNewsSN).HasComment("WebNews流水碼");
            });

            modelBuilder.Entity<SysZipCode>(entity =>
            {
                entity.HasKey(e => e.ZipCodeSn);

                entity.Property(e => e.ZipCodeSn)
                    .HasColumnName("ZipCodeSN")
                    .HasComment("縣市區域代碼表-流水碼");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否啟用：1 啟用、0 停用     -99刪除");

                entity.Property(e => e.ParentSn)
                    .HasColumnName("ParentSN")
                    .HasComment("父層SN");

                entity.Property(e => e.SortOrder).HasComment("排序");

                entity.Property(e => e.Title)
                    .HasMaxLength(50)
                    .HasComment("名稱");

                entity.Property(e => e.ZipCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("代碼");
            });
            modelBuilder.Entity<CaseApplyValidate>(entity =>
            {
                entity.HasKey(e => e.CaseValidateSN);

                entity.Property(e => e.CaseValidateSN).HasComment("驗證信箱　流水碼");

                entity.Property(e => e.BowserInfo)
                    .HasMaxLength(128)
                    .HasComment("用途 ?");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("建立時間");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasComment("驗證有效時間");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasComment("申請信箱");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("修改時間");

                entity.Property(e => e.ProcessIPAddress)
                    .HasMaxLength(128)
                    .HasComment("使用者IP");

                entity.Property(e => e.StatementCheckDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("((0))")
                    .HasComment("驗證有??");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))")
                    .HasComment("驗證狀態 0 : 新增 1 : 已驗證");

                entity.Property(e => e.Token)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasComment("驗證key");
            });
            modelBuilder.Entity<CaseApplyClass>(entity =>
            {
                entity.HasKey(e => e.CaseApplyClassSN);

                entity.Property(e => e.CaseApplyClassSN).HasComment("流水碼");

                entity.Property(e => e.CaseName)
                    .HasMaxLength(200)
                    .HasComment("意見分類");

                entity.Property(e => e.CaseNameEN)
                    .HasMaxLength(200)
                    .HasComment("意見分類(英文)");

                entity.Property(e => e.SysDepartmentSN).HasComment("部門流水碼");



                entity.Property(e => e.CaseNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("意見分類代號");

                entity.Property(e => e.CaseType)
                    .HasMaxLength(10)
                    .HasComment("公文子分類");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedUserID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.HandleDate).HasComment("辦理天數");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否啟用：1 啟用、0 停用");

                entity.Property(e => e.ParentSN).HasComment("預設之後有多層的情況");

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessIPAddress)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessUserID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.WebSiteID)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("網站編號");

                entity.Property(e => e.info)
                    .HasMaxLength(200)
                    .HasComment("備註200個字");

                entity.Property(e => e.SysCategoryKey)
                    .HasMaxLength(200)
                    .HasComment("對應SysCategory");
            });
            modelBuilder.Entity<CaseApply>(entity =>
            {
                entity.HasKey(e => e.CaseApplySN);

                entity.Property(e => e.CaseApplySN).HasComment("流水碼");

                entity.Property(e => e.AcceptDate)
                    .HasColumnType("datetime")
                    .HasComment("使用者 確認 案件成立時間");

                entity.Property(e => e.ApplyUser)
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasComment("申請者姓名");

                entity.Property(e => e.CaseApplyClassSN).HasComment("意見分類SN");

                entity.Property(e => e.CaseCategoryL2)
                    .HasMaxLength(20)
                    .HasComment("意見分類 備用");

                entity.Property(e => e.CaseContent)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasComment("內文");

                entity.Property(e => e.CaseNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("案件編號- yyyyMMDDhhZZZZ (ZZZZ為流水碼)每小時最大可以受理9999");

                entity.Property(e => e.CasePwd)
                    .HasMaxLength(250)
                    .HasComment("案件驗證碼 隨機碼");

                entity.Property(e => e.CaseValidateSN).HasComment("對應驗證信 流水碼");

                entity.Property(e => e.ContactEmail)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasComment("申請者信箱");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreateUser)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DocDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("公文機關");

                entity.Property(e => e.DocNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("公文文號");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasComment("案件 接收驗證信 有效期限");

                entity.Property(e => e.Mobile)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("手機號碼");

                entity.Property(e => e.OriginalCaseApplyClassSn)
                    .HasColumnName("OriginalCaseApplyClassSN")
                    .HasComment("原始分類代碼");

                entity.Property(e => e.OriginalClassDeptSn)
                    .HasColumnName("OriginalClassDeptSN")
                    .HasComment("原始分類機關代碼");

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessIPAddress)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessUser)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ReplyApiDate)
                    .HasColumnType("datetime")
                    .HasComment("接收資料的時間");

                entity.Property(e => e.ReplyCaseNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("對方回傳的");

                entity.Property(e => e.ReplyCasePwd).HasMaxLength(250);

                entity.Property(e => e.ReplyContent)
                    .HasMaxLength(4000)
                    .HasComment("公文回覆內文");

                entity.Property(e => e.ReplyDate)
                    .HasColumnType("datetime")
                    .HasComment("對方回傳的回覆時間");

                entity.Property(e => e.ReplySource)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("回覆狀態 :  0 尚未回覆  1 公文系統 2 管理系統回覆");

                entity.Property(e => e.ReplySource2)
                    .HasMaxLength(4000)
                    .HasComment("系統回復的訊息");

                entity.Property(e => e.ReplySource2Date)
                    .HasColumnType("datetime")
                    .HasComment("系統回復的訊息的時間");

                entity.Property(e => e.ResendDate)
                    .HasColumnType("datetime")
                    .HasComment("最後重寄確認信時間");

                entity.Property(e => e.ResendNum)
                    .HasDefaultValueSql("((0))")
                    .HasComment("重寄次數");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))")
                    .HasComment("0->案件成立 1 寄送確認信 2 寄送確認信失敗  3 完成確認信 4 寄送受理信成功   5 寄送受理信失敗 9 結案");

                entity.Property(e => e.Subject)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasComment("標題");

                entity.Property(e => e.Tel)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasComment("家裡電話");

                entity.Property(e => e.TelAreacode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("區域號碼");

                entity.Property(e => e.TelExtension)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("分機號碼");

                entity.Property(e => e.WebSiteId)
                    .HasMaxLength(10)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CaseApplySpeedApiLog>(entity =>
            {
                entity.HasKey(e => e.SpeedApiLogSn)
                    .HasName("PK_SpeedApiLog");

                entity.Property(e => e.SpeedApiLogSn).HasColumnName("SpeedApiLogSN");

                entity.Property(e => e.Action)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("UploadAttachment、AddNewCase、SearchCase、DownloadAttachment");

                entity.Property(e => e.ApiMessage)
                    .HasMaxLength(40)
                    .HasComment("回傳訊息，OK時回傳空字串");

                entity.Property(e => e.ApiStatus)
                    .HasMaxLength(1)
                    .HasComment("1 : OK 2 : Fail 3 : Error");

                entity.Property(e => e.CaseApplySn).HasColumnName("CaseApplySN");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedUserId)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CreatedUserID")
                    .HasComment("民意信箱 : MailBox 、排程 : Console 、後台UserID");

                entity.Property(e => e.Request).HasComment("傳送資料");

                entity.Property(e => e.Message).HasComment("成功時存入回傳資料 錯誤時存入錯誤訊息");

                entity.Property(e => e.StatusCode)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("請求回應");
            });

            modelBuilder.Entity<CaseApplyClassTo>(entity =>
            {
                entity.HasKey(e => e.CaseApplyClassToSN);

                entity.Property(e => e.CaseApplyClassSN).HasComment("對應 意見分類 SN");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedUserID)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasComment("意見分類 負責人 email");

                entity.Property(e => e.IsEnable)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("是否啟用：1 啟用、0 停用");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .HasComment("意見分類 負責人 姓名");

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessIPAddress)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessUserID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SysDepartmentSN).HasComment("意見分類 負責人 部門SN");
            });
            modelBuilder.Entity<CaseApplyWeb>(entity =>
            {
                entity.HasKey(e => e.CaseApplyWebSN);

                entity.Property(e => e.CaseApplyWebSN).HasComment("識別碼");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasComment("建立時間");

                entity.Property(e => e.CreatedUserID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("建立者");

                entity.Property(e => e.Footer)
                    .IsRequired()
                    .HasComment("頁尾設定");

                entity.Property(e => e.GACode)
                    .IsRequired()
                    .HasComment("GACode");

                entity.Property(e => e.IsEnable)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("啟用與否");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("編輯時間");

                entity.Property(e => e.ProcessIPAddress)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("編輯者IP");

                entity.Property(e => e.ProcessUserID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("編輯者");

                entity.Property(e => e.SEODescription)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasComment("SEODescription");

                entity.Property(e => e.SEOKeywords)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasComment("SEOKeywords");

                entity.Property(e => e.Satisfaction).HasComment("滿意度開關");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasComment("標題");

                entity.Property(e => e.WebSiteID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("站台編號");
            });
            modelBuilder.Entity<CaseApplySurvey>(entity =>
            {
                entity.HasKey(e => e.CaseApplySurveySn);

                entity.Property(e => e.CaseApplySurveySn).HasColumnName("CaseApplySurveySN");

                entity.Property(e => e.CaseApplySn).HasColumnName("CaseApplySN");

                entity.Property(e => e.CaseDefect)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("A:無 B:未解決 C:態度不佳 D: 時間太慢 E:欠缺誠意 F:引用錯誤 G:推諉責任 H:與實情不符");

                entity.Property(e => e.CaseProposal).HasComment("建議事項");

                entity.Property(e => e.CaseSatisfy).HasComment("滿意度1~10分");

                entity.Property(e => e.CaseSolved)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasComment("1:完全解決 2:部份解決 3:沒有解決 4:提出建議");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasComment("建立日期");
            });

            modelBuilder.Entity<CaseApplyPage>(entity =>
            {
                entity.HasKey(e => e.CaseApplyPageSn)
                    .HasName("PK_CaseApplyPageSN");

                entity.Property(e => e.CaseApplyPageSn)
                    .HasColumnName("CaseApplyPageSN")
                    .HasComment("序號");

                entity.Property(e => e.ContentEnaled).HasComment("是否啟用內容 否:0 是:1");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasComment("建立時間");

                entity.Property(e => e.CreateUser)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("建立使用者");

                entity.Property(e => e.PageContent).HasComment("頁面內容");

                entity.Property(e => e.PageName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("頁面名稱");

                entity.Property(e => e.PageTitle)
                    .HasMaxLength(20)
                    .HasComment("頁面標題");

                entity.Property(e => e.PageType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("頁面類型 1-民意信箱前台頁面 2-郵件內容");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("修改時間");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("修改使用者");

                entity.Property(e => e.SortOrder).HasComment("排序編號");
            });

            modelBuilder.Entity<CaseApplyPageExtend>(entity =>
            {
                entity.HasKey(e => e.CaseApplyPageExtendSn);

                entity.Property(e => e.CaseApplyPageExtendSn)
                    .ValueGeneratedNever()
                    .HasColumnName("CaseApplyPageExtendSN")
                    .HasComment("序號");

                entity.Property(e => e.CaseApplyPageSn)
                    .HasColumnName("CaseApplyPageSN")
                    .HasComment("頁面序號");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasComment("建立時間");

                entity.Property(e => e.CreateUser)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("建立使用者");

                entity.Property(e => e.ExtendContent).HasComment("擴充內容");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasComment("修改時間");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("修改使用者");

                entity.Property(e => e.SortOrder).HasComment("排序編號");
            });

            modelBuilder.Entity<WebLevelSortLog>(entity =>
            {
                entity.HasKey(e => e.WebLevelSortLogSN);

                entity.Property(e => e.WebLevelSortLogSN).HasComment("流水碼");

                entity.Property(e => e.AfterSortType)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasComment("排序方式:0 系統排序、1最新日期排序");

                entity.Property(e => e.BeforeSortType)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasComment("排序方式:0 系統排序、1最新日期排序");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasComment("建立時間");

                entity.Property(e => e.CreatedUserID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("建立者");

                entity.Property(e => e.Lang)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("語系");

                entity.Property(e => e.SortMethod)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasComment("0:更改為系統排序、1:更改為最新日期排序、2:調整資料排序位置");

                entity.Property(e => e.WebLevelParentSN).HasComment("父節點代號");

                entity.Property(e => e.WebSiteID)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("網站編號");
            });

            modelBuilder.Entity<WebFileDownLoads>(entity =>
            {
                entity.HasKey(e => e.FileSN);

                entity.Property(e => e.FileSN).HasComment("流水號，起始值1，遞增值1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasComment("建立日期");

                entity.Property(e => e.DownLoads).HasComment("下載數");
            });

            modelBuilder.Entity<WEBSchedule>(entity =>
            {
                entity.HasKey(e => e.ScheduleSN);

                entity.Property(e => e.ScheduleSN).HasComment("流水號，起始值1，遞增值1");
                entity.Property(e => e.Name).HasComment("排程名稱").HasMaxLength(50);
                entity.Property(e => e.Frequency).IsUnicode(false).HasComment("(預設) 可以控制間隔時間");
                entity.Property(e => e.UseTime).IsUnicode(false).HasComment("花費的時間");
                entity.Property(e => e.InEnable).IsUnicode(false).HasMaxLength(500).HasComment("(預設)開關");
                entity.Property(e => e.ProcessDate).IsUnicode(false).HasColumnType("datetime").HasComment("更新時間");
                entity.Property(e => e.Info).IsUnicode(false).HasComment("備註");

            });


            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}